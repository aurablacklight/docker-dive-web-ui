# =============================================================================
# OPTIMIZED PRODUCTION DOCKERFILE FOR FRONTEND
# Multi-stage build with layer caching optimization
# =============================================================================

# Stage 1: Build the React app
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files first (separate layer for dependency caching)
COPY package*.json ./

# Install dependencies (cached layer - only rebuilds when package*.json changes)
RUN npm install --only=production

# Copy source code (this layer rebuilds when source changes)
COPY . .

# Build the application
RUN npm run build

# Stage 2: Serve with nginx
FROM nginx:alpine

# Copy built app from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
